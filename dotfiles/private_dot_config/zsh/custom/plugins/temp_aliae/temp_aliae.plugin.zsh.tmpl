export PATH="/Users/kilian/.local/bin:$PATH"
export PATH="/Users/kilian/bin:$PATH"
export PATH="/Users/kilian/.bin:$PATH"
export PATH="/Users/kilian/.krew/bin:$PATH"
# export PATH="/Users/kilian/.g/go:$PATH"
# export PATH="/Users/kilian/.g/go/bin:$PATH"
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/opt/homebrew/opt/uutils-coreutils/libexec/uubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/findutils/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-which/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-indent/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/gnu-tar/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/grep/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/unzip/bin:$PATH"
export PATH="/Users/kilian/.cargo/bin:$PATH"

mc() {
  if [ -z "$1" ]; then
    echo "Make directory and enter it"
    echo "Usage: mc <path>"
    return 1
  else
    mkdir -p $1
    cd $1 || exit
  fi
}

maketar() {
  if [ -z "$1" ]; then
    echo "Creates an archive (*.tar.gz) from given directory"
    echo "Usage: maketar <path>"
    return 1
  else
    tar cvzf "${1%%/}.tar.gz" "${1%%/}/"
  fi
}

makezip() {
  if [ -z "$1" ]; then
    echo "Create a ZIP archive of a file or folder"
    echo "Usage: makezip <path>"
    return 1
  else
    zip -r "${1%%/}.zip" "$1"
  fi
}

pbfile() {
  if [ -z "$1" ]; then
    echo "Copies a file to the clipboard (not the contents of the file)"
    echo "Usage: pbfile <path>"
    return 1
  else
    osascript \
      -e 'on run args' \
      -e 'set the clipboard to POSIX file (first item of args)' \
      -e end \
    "$@"
  fi
}

extract() {
  if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    return 1
  else
    for n in $@; do
      if [ -f "$n" ]; then
        case "${n%,}" in
        *.tar.bz2 | *.tar.gz | *.tar.xz | *.tbz2 | *.tgz | *.txz | *.tar)
          tar xvf "$n"
          ;;
        *.lzma) unlzma ./"$n" ;;
        *.bz2) bunzip2 ./"$n" ;;
        *.rar) unrar x -ad ./"$n" ;;
        *.gz) gunzip ./"$n" ;;
        *.zip) unzip ./"$n" ;;
        *.z) uncompress ./"$n" ;;
        *.7z | *.arj | *.cab | *.chm | *.deb | *.dmg | *.iso | *.lzh | *.msi | *.rpm | *.udf | *.wim | *.xar)
          7z x ./"$n"
          ;;
        *.xz) unxz ./"$n" ;;
        *.exe) cabextract ./"$n" ;;
        *)
          echo "extract: '$n' - unknown archive method"
          return 1
          ;;
        esac
      else
        echo "'$n' - file does not exist"
        return 1
      fi
    done
  fi
}

alias ls="eza --no-quotes --group-directories-first -w120"
alias ll="ls -l"
alias la="ls -a"
alias ll="ls -1a"
alias la="ls -a"
alias lll="ls -lga --smart-group --time-style=\"+%Y-%m-%d %H:%M:%S\" --sort name"
alias lt="tree"
alias lm="lll | most"
alias lf="ll -f"
alias ld="ll -D"
alias lls="lll --total-size"
alias lg="ls -l --no-permissions --no-user --git --git-repos --git-ignore -a"
alias _="sudo "
alias python="python3"
alias zshconfig="code ~/.zshrc"
alias fzf="fzf --preview 'bat --color=always --style=numbers --line-range=:500 {}'"
alias reload="exec zsh"
alias free="free -m -l -t -h"
alias rm="rm -I --preserve-root"
alias cp="cp -i"
alias mv="mv -i"
alias mkdir="mkdir -p"
alias chown="chown --preserve-root"
alias chmod="chmod --preserve-root"
alias chgrp="chgrp --preserve-root"
alias wget="wget -c"
alias less="most"
alias more="most"
alias cat="bat --paging=never"
alias catc="bat -pp"
# path() {
#     echo -e ${PATH//:/\\n}
# }
alias myip="curl http://ipecho.net/plain; echo"
alias upgrade="topgrade"
alias brew_lock="rm -rf $(brew --prefix)/var/homebrew/locks"
alias cls="clear"
{{/* alias dps="docker ps --format \"table {{.Names}}\\t{{.RunningFor}}\\t{{.Status}}\"" */}}
alias lsblk="lsblk -o NAME,SIZE,FSTYPE,TYPE,MOUNTPOINT"
alias du="dust -w 120"
alias df="duf"
alias ps="procs"
alias dig="dog"
alias top="btop"
alias yq="yq -P -e -I 2"
alias c="clear"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias which="type -a"
alias tfenv="tenv tf"
alias h="helm"
alias hui="h upgrade --install"
alias hru="h repo update"
alias hdb="h dependency build"
alias hra="h repo add"
alias ceph="kubectl rook-ceph ceph"
alias kccc="kubectl config current-context"
alias kcdc="kubectl config delete-context"
alias kcgc="kubectl config get-contexts"
alias kcn="kubectl config set-context --current --namespace"
alias kcsc="kubectl config set-context"
alias kcuc="kubectl config use-context"
alias kcdelcl="kubectl config delete-cluster"
alias kcdelu="kubectl config delete-user"
alias kcgcl="kubectl config get-clusters"
alias kcgu="kubectl config get-users"
alias kcrc="kubectl config rename-context"
alias kcscr="kubectl config set-credentials"
alias kcscl="kubectl config set-cluster"
alias kcs="kubectl config set"
alias kcu="kubectl config unset"
alias kcv="kubectl config view"

{{/*
# kgpscn() {
#     kubectl get pods -n $1 $2 -o go-template \
#   --template='{{range .items}}{{"pod: "}}{{.metadata.name}}
# {{if .spec.securityContext}}
#   PodSecurityContext:
#     {{"runAsGroup: "}}{{.spec.securityContext.runAsGroup}}
#     {{"runAsNonRoot: "}}{{.spec.securityContext.runAsNonRoot}}
#     {{"runAsUser: "}}{{.spec.securityContext.runAsUser}}                                 {{if .spec.securityContext.seLinuxOptions}}
#     {{"seLinuxOptions: "}}{{.spec.securityContext.seLinuxOptions}}                       {{end}}
# {{else}}PodSecurity Context is not set
# {{end}}{{range .spec.containers}}
# {{"container name: "}}{{.name}}
# {{"image: "}}{{.image}}{{if .securityContext}}
#     {{"allowPrivilegeEscalation: "}}{{.securityContext.allowPrivilegeEscalation}}   {{if .securityContext.capabilities}}
#     {{"capabilities: "}}{{.securityContext.capabilities}}                           {{end}}
#     {{"privileged: "}}{{.securityContext.privileged}}                               {{if .securityContext.procMount}}
#     {{"procMount: "}}{{.securityContext.procMount}}                                 {{end}}
#     {{"readOnlyRootFilesystem: "}}{{.securityContext.readOnlyRootFilesystem}}
#     {{"runAsGroup: "}}{{.securityContext.runAsGroup}}
#     {{"runAsNonRoot: "}}{{.securityContext.runAsNonRoot}}
#     {{"runAsUser: "}}{{.securityContext.runAsUser}}                                 {{if .securityContext.seLinuxOptions}}
#     {{"seLinuxOptions: "}}{{.securityContext.seLinuxOptions}}                       {{end}}{{if .securityContext.windowsOptions}}
#     {{"windowsOptions: "}}{{.securityContext.windowsOptions}}                       {{end}}
# {{else}}
#     SecurityContext is not set
# {{end}}
# {{end}}{{end}}'

# }
*/}}

kdecsn() {
  k get secret -n $1 $2 -o json | jq -r '.data | map_values(@base64d)'
}

kdecspn() {
  k get secret -n $1 $2 -o json | jq -r '.data | map_values(@base64d) | .["'$3'"]'
}

# kubeclean() {
#     for kfile in $(ls ~/.kube/config-files); do
#   yq "del(.clusters[0].cluster.certificate-authority-data)" ~/.kube/config-files/${kfile} --inplace
# done


# }
alias kubectl="kubecolor"
alias k="kubectl"
alias kaf="k apply -f"
alias kcp="k cp"
alias kctx="kubectx"
alias kdel="k delete"
alias kdeln="kdel -n"
alias kdelf="k delete -f"
alias kdelcr="kdel certificaterequest"
alias kdelcrn="kdelcr -n"
alias kdelcj="kdel cronjob"
alias kdelcjn="kdelcj -n"
alias kdelc="kdel certificate"
alias kdelcn="kdelc -n"
alias kdelcsr="kdel certificatesigningrequest"
alias kdelcsrn="kdelcsr -n"
alias kdelcm="kdel configmap"
alias kdelcmn="kdelcm -n"
alias kdelcrd="kdel customresourcedefinition"
alias kdelcrdn="kdelcrd -n"
alias kdelds="kdel daemonset"
alias kdeldsn="kdelds -n"
alias kdeld="kdel deployment"
alias kdeldn="kdeld -n"
alias kdele="kdel endpoint"
alias kdelen="kdele -n"
alias kdeles="kdel externalsecret"
alias kdelesn="kdeles -n"
alias kdelgr="kdel gitrepository"
alias kdelgrn="kdelgr -n"
alias kdelhr="kdel helmrelease"
alias kdelhrn="kdelhr -n"
alias kdeli="kdel ingress"
alias kdelin="kdeli -n"
alias kdelj="kdel job"
alias kdeljn="kdelj -n"
alias kdelk="kdel kustomization"
alias kdelkn="kdelk -n"
alias kdelns="kdel namespace"
alias kdelpvc="kdel persistentvolumeclaim"
alias kdelpvcn="kdelpvc -n"
alias kdelpv="kdel persistentvolume"
alias kdelpvn="kdelpv -n"
alias kdelp="kdel pod"
alias kdelpn="kdelp -n"
alias kdelrs="kdel replicaset"
alias kdelrsn="kdelrs -n"
alias kdels="kdel secret"
alias kdelsn="kdels -n"
alias kdelsec="kdels"
alias kdelsecn="kdelsec -n"
alias kdelsa="kdel serviceaccount"
alias kdelsan="kdelsa -n"
alias kdelsvc="kdel service"
alias kdelsvcn="kdelsvc -n"
alias kdelss="kdel statefulset"
alias kdelssn="kdelss -n"
alias kdeltf="kdel terraform"
alias kdeltfn="kdeltf -n"
alias kd="k describe"
alias kdn="kd -n"
alias kdcr="kd certificaterequest"
alias kdcrn="kdcr -n"
alias kdcj="kd cronjob"
alias kdcjn="kdcj -n"
alias kdc="kd certificate"
alias kdcrn="kdc -n"
alias kdcsr="kd certificatesigningrequest"
alias kdcsrn="kdcsr -n"
alias kdcm="kd configmap"
alias kdcmn="kdcm -n"
alias kdcrd="kd customresourcedefinition"
alias kdcrdn="kdcrd -n"
alias kdds="kd daemonset"
alias kddsn="kdds -n"
alias kdd="kd deployment"
alias kddn="kdd -n"
alias kde="kd endpoint"
alias kden="kde -n"
alias kdes="kd externalsecret"
alias kdesn="kdes -n"
alias kdgr="kd gitrepository"
alias kdgrn="kdgr -n"
alias kdhr="kd helmrelease"
alias kdhrn="kdhr -n"
alias kdi="kd ingress"
alias kdin="kdi -n"
alias kdj="kd job"
alias kdjn="kdj -n"
alias kdk="kd kustomization"
alias kdkn="kdk -n"
alias kdns="kd namespace"
alias kdn="kd node"
alias kdpvc="kd persistentvolumeclaim"
alias kdpvcn="kdpvc -n"
alias kdpv="kd persistentvolume"
alias kdpvn="kdpv -n"
alias kdp="kd pod"
alias kdpn="kdp -n"
alias kdrs="kd replicaset"
alias kdrsn="kdrs -n"
alias kds="kd secret"
alias kdsn="kds -n"
alias kdsec="kds"
alias kdsecn="kdsec -n"
alias kdsa="kd serviceaccount"
alias kdsan="kdsa -n"
alias kdsvc="kd service"
alias kdsvcn="kdsvc -n"
alias kdss="kd statefulset"
alias kdssn="kdss -n"
alias kdtf="kd terraform"
alias kdtfn="kdtf -n"
alias ke="k edit"
alias ken="ke -n"
alias kecr="ke certificaterequest"
alias kecrn="kecr -n"
alias kecj="ke cronjob"
alias kecjn="kecj -n"
alias kec="ke certificate"
alias kecn="kec -n"
alias kecsr="ke certificatesigningrequest"
alias kecsrn="kecsr -n"
alias kecm="ke configmap"
alias kecmn="kecm -n"
alias kecrd="ke customresourcedefinition"
alias kecrdn="kecrd -n"
alias keds="ke daemonset"
alias kedsn="keds -n"
alias ked="ke deployment"
alias kedn="ked -n"
alias kee="ke endpoint"
alias keen="kee -n"
alias kees="ke externalsecret"
alias keesn="kees -n"
alias kegr="ke gitrepository"
alias kegrn="kegr -n"
alias kehr="ke helmrelease"
alias kehrn="kehr -n"
alias kei="ke ingress"
alias kein="kei -n"
alias kej="ke job"
alias kejn="kej -n"
alias kek="ke kustomization"
alias kekn="kek -n"
alias kens="ke namespace"
alias kepvc="ke persistentvolumeclaim"
alias kepvcn="kepvc -n"
alias kepv="ke persistentvolume"
alias kepvn="kepv -n"
alias kep="ke pod"
alias kepn="kep -n"
alias kers="ke replicaset"
alias kersn="kers -n"
alias kes="ke secret"
alias kesn="kes -n"
alias kesec="kes"
alias kesecn="kesec -n"
alias kesa="ke serviceaccount"
alias kesan="kesa -n"
alias kesvc="ke service"
alias kesvcn="kesvc -n"
alias kess="ke statefulset"
alias kessn="kess -n"
alias ketf="ke terraform"
alias ketfn="ketf -n"
alias keti="k exec -t -i"
alias kg="k get"
alias kgn="kg -n"
alias kga="kg all"
alias kgaa="ka --all-namespaces"
alias kgcr="kg certificaterequest"
alias kgcrn="kgcr -n"
alias kgcra="kgcr --all-namespaces"
alias kgcrw="kgcr --watch"
alias kgcrwn="kgcrw -n"
alias kgcrwa="kgcrw --all-namespaces"
alias kgcraw="kgcrwa"
alias kgcj="kg cronjob"
alias kgcjn="kgcj -n"
alias kgcja="kgcj --all-namespaces"
alias kgcjw="kgcj --watch"
alias kgcjwn="kgcjw -n"
alias kgcjwa="kgcjw --all-namespaces"
alias kgcjaw="kgcjwa"
alias kgc="kg certificate"
alias kgcn="kgc -n"
alias kgca="kgc --all-namespaces"
alias kgcw="kgc --watch"
alias kgcwn="kgcw -n"
alias kgcwa="kgcw --all-namespaces"
alias kgcaw="kgcwa"
alias kgcsr="kg certificatesigningrequest"
alias kgcsrn="kgcsr -n"
alias kgcsra="kgcsr --all-namespaces"
alias kgcsrw="kgcsr --watch"
alias kgcsrwn="kgcsrw -n"
alias kgcsrwa="kgcsrw --all-namespaces"
alias kgcsrwa="kgcsrw"
alias kgcm="kg configmap"
alias kgcmn="kgcm -n"
alias kgcma="kgcm --all-namespaces"
alias kgcmw="kgcm --watch"
alias kgcmwn="kgcmw -n"
alias kgcmwa="kgcmw --all-namespaces"
alias kgcmaw="kgcmwa"
alias kgcrd="kg customresourcedefinition"
alias kgcrdn="kgcrd -n"
alias kgcrda="kgcrd --all-namespaces"
alias kgcrdw="kgcrd --watch"
alias kgcrdwn="kgcrdw -n"
alias kgcrdwa="kgcrdw --all-namespaces"
alias kgcrdaw="kgcrdwa"
alias kgds="kg daemonset"
alias kgdsn="kgds -n"
alias kgdsa="kgds --all-namespaces"
alias kgdsw="kgds --watch"
alias kgdswn="kgdsw -n"
alias kgdswa="kgdsw --all-namespaces"
alias kgdaw="kgdwa"
alias kgd="kg deployment"
alias kgdn="kgd -n"
alias kgda="kgd --all-namespaces"
alias kgdw="kgd --watch"
alias kgdwn="kgdw -n"
alias kgdwa="kgdw --all-namespaces"
alias kgdaw="kgdwa"
alias kge="kg endpoint"
alias kgen="kge -n"
alias kgea="kge --all-namespaces"
alias kgew="kge --watch"
alias kgewn="kgew -n"
alias kgewa="kgew --all-namespaces"
alias kgeaw="kgewa"
alias kges="kg externalsecret"
alias kgesn="kges -n"
alias kgesa="kges --all-namespaces"
alias kgesw="kges --watch"
alias kgeswn="kgesw -n"
alias kgeswa="kgesw --all-namespaces"
alias kgesaw="kgeswa"
alias kggr="kg gitrepository"
alias kggrn="kggr -n"
alias kggra="kggr --all-namespaces"
alias kggrw="kggr --watch"
alias kggrwn="kggrw -n"
alias kggrwa="kggrw --all-namespaces"
alias kggraw="kggrwa"
alias kghr="kg helmrelease"
alias kghrn="kghr -n"
alias kghra="kghr --all-namespaces"
alias kghrw="kghr --watch"
alias kghrwn="kghrw -n"
alias kghrwa="kghrw --all-namespaces"
alias kghraw="kghrwa"
alias kgi="kg ingress"
alias kgin="kgi -n"
alias kgia="kgi --all-namespaces"
alias kgiw="kgi --watch"
alias kgiwn="kgiw -n"
alias kgiwa="kgiw --all-namespaces"
alias kgiaw="kgiwa"
alias kgj="kg job"
alias kgjn="kgj -n"
alias kgja="kgj --all-namespaces"
alias kgjw="kgj --watch"
alias kgjwn="kgjw -n"
alias kgjwa="kgjw --all-namespaces"
alias kgjaw="kgjwa"
alias kgk="kg kustomization"
alias kgkn="kgk -n"
alias kgka="kgk --all-namespaces"
alias kgkw="kgk --watch"
alias kgkwn="kgkw -n"
alias kgkwa="kgkw --all-namespaces"
alias kgkaw="kgkwa"
alias kgns="kg namespace"
alias kgnsw="kgns --watch"
alias kgno="kg node"
alias kgnodw="kg node --watch"
alias kgpvc="kg persistentvolumeclaim"
alias kgpvcn="kgpvc -n"
alias kgpvca="kgpvc --all-namespaces"
alias kgpvcw="kgpvc --watch"
alias kgpvcwn="kgpvcw -n"
alias kgpvcwa="kgpvcw --all-namespaces"
alias kgpvcaw="kgpvcwa"
alias kgpv="kg persistentvolume"
alias kgpvn="kgpv -n"
alias kgpva="kgpv --all-namespaces"
alias kgpvw="kgpv --watch"
alias kgpvwn="kgpvw -n"
alias kgpvwa="kgpvw --all-namespaces"
alias kgpvaw="kgpvwa"
alias kgp="kg pod"
alias kgpn="kgp -n"
alias kgpa="kgp --all-namespaces"
alias kgpw="kgp --watch"
alias kgpwn="kgpw -n"
alias kgpwa="kgpw --all-namespaces"
alias kgpaw="kgpwa"
alias kgrs="kg replicaset"
alias kgrsn="kgrs -n"
alias kgrsa="kgrs --all-namespaces"
alias kgrsw="kgrs --watch"
alias kgrswn="kgrsw -n"
alias kgrswa="kgrsw --all-namespaces"
alias kgrsaw="kgrswa"
alias kgs="kg secret"
alias kgsn="kgs -n"
alias kgsa="kgs --all-namespaces"
alias kgsw="kgs --watch"
alias kgswn="kgsw -n"
alias kgswa="kgsw --all-namespaces"
alias kgswa="kgsw"
alias kgsec="kgs"
alias kgsecn="kgsec -n"
alias kgseca="kgsec --all-namespaces"
alias kgsecw="kgsec --watch"
alias kgsecwn="kgsecw -n"
alias kgsecwa="kgsecw --all-namespaces"
alias kgsecaw="kgsecwa"
alias kgsa="kg serviceaccount"
alias kgsan="kgsa -n"
alias kgsaa="kgsa --all-namespaces"
alias kgsaw="kgsa --watch"
alias kgsawn="kgsaw -n"
alias kgsawa="kgsaw --all-namespaces"
alias kgsaaw="kgsawa"
alias kgsvc="kg service"
alias kgsvcn="kgsvc -n"
alias kgsvca="kgsvc --all-namespaces"
alias kgsvcw="kgsvc --watch"
alias kgsvcwn="kgsvcw -n"
alias kgsvcwa="kgsvcw --all-namespaces"
alias kgsvcaw="kgsvcwa"
alias kgss="kg statefulset"
alias kgssn="kgss -n"
alias kgssa="kgss --all-namespaces"
alias kgssw="kgss --watch"
alias kgsswn="kgssw -n"
alias kgsswa="kgssw --all-namespaces"
alias kgssaw="kgsswa"
alias kgtf="kg terraform"
alias kgtfn="kgtf -n"
alias kgtfa="kgtf --all-namespaces"
alias kgtfw="kgtf --watch"
alias kgtfwn="kgtfw -n"
alias kgtfwa="kgtfw --all-namespaces"
alias kgtfaw="kgtfwa"
alias kl="k logs"
alias kln="kl -n"
alias kl1h="k logs --since 1h"
alias kl1hn="kl1h -n"
alias kl1m="k logs --since 1m"
alias kl1mn="kl1m -n"
alias kl1s="k logs --since 1s"
alias kl1sn="kl1s -n"
alias klf="k logs -f"
alias klfn="klf -n"
alias klf1h="k logs --since 1h -f"
alias klf1hn="klf1h -n"
alias klf1m="k logs --since 1m -f"
alias klf1mn="klf1m -n"
alias klf1s="k logs --since 1s -f"
alias klf1sn="klf1s -n"
alias kpf="k port-forward"
alias krh="k rollout history"
alias krsd="k rollout status deployment"
alias krsss="k rollout status statefulset"
alias kru="k rollout undo"
alias ksd="k scale deployment"
alias ksss="k scale statefulset"
alias kw="kubectl watch"
# alias doctl="" ??
alias gh="op plugin run -- gh"

export XDG_CONFIG_HOME="${HOME}/.config"
export EDITOR="micro"
export TMPDIR="${HOME}/.tmp"
export HOMEBREW_BREWFILE_APPSTORE="0"
export HOMEBREW_BREWFILE="~/.homebrew/Brewfile"
export SSH_AUTH_SOCK="$HOME/.1password/agent.sock"
# export GOROOT="/Users/kilian/.g/go"
# export G_MIRROR="https://golang.google.cn/dl/"
# export GOBIN="/Users/kilian/.g/go/bin"
# export GOMODCACHE="/Users/kilian/.g/go/pkg/mod"
# export GOCACHE="/Users/kilian/.g/go/cache"
# export KUBECONFIG="$(fd . '/Users/kilian/.kube/config-files' | tr \\n ':')"
export OP_PLUGIN_ALIASES_SOURCED=1
export SOPS_AGE_KEY_FILE="${HOME}/.config/sops/age/keys.txt"
export YSU_IGNORED_ALIASES=("_" ".." "..." "...." "....." "......" "apt" "k" "zi" "zini" "zpl" "zplg")

{{ if eq .chezmoi.os "linux" }}
alias ssh='kitten ssh'
{{ end }}
